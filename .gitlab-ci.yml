# Setup
image: mcr.microsoft.com/dotnet/sdk:3.1

stages:
  - build
  - test
  - deploy

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - obj

before_script:
  - "dotnet restore"
    
# Actual jobs

buildDebug:
  stage: build
  script:
    - "dotnet build"
  artifacts:
    paths:
      - bin/Debug
    expire_in: 3 days
    
buildStaging:
  stage: build
  script:
    - "dotnet build --configuration Staging"
  artifacts:
    paths:
      - bin/Staging
    expire_in: 2 weeks
    
test:
  stage: test
  script:
    - "dotnet test"
  artifacts:
  


buildRelease:
  stage: build
  retry: 1
  script:
    - "dotnet build --configuration Release"
  artifacts:
    paths:
      - bin/Release

deployProduction:
  image: kroniak/ssh-client
  stage: deploy
  when: manual
  only:
    refs:
      - master
  dependencies: ["buildRelease"]
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PROD_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no statty@jvyden.xyz ./init-deploy.sh
    - scp -o StrictHostKeyChecking=no -r bin/Release statty@jvyden.xyz:~/Statty
    - ssh -o StrictHostKeyChecking=no statty@jvyden.xyz ./finish-deploy.sh
  environment:
    name: production
  cache:
    
deployStaging:
  image: kroniak/ssh-client
  stage: deploy
  only:
    refs:
      - master
  dependencies: ["buildStaging"]
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_STAGING_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no statty-staging@jvyden.xyz ./init-deploy.sh
    - scp -o StrictHostKeyChecking=no -r bin/Staging statty-staging@jvyden.xyz:~/Statty
    - ssh -o StrictHostKeyChecking=no statty-staging@jvyden.xyz ./finish-deploy.sh
  environment:
    name: staging
  cache:
    